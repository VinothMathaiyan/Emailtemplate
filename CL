

Slide 1 – Problem Statement
After the pivot program, dashboard access management moved from Salesforce → ServiceNow.

Current challenge: ServiceNow setup is shared with Reporting team → unclear dashboards, wrong user details, manual workarounds.

Limitations of current setup:

No dedicated queue for HR Colleague Listening team.

Free-text inputs (dashboard name, approver, justification) lead to errors.

Manual clarifications required, causing delays.

ServiceNow team rejected request for dedicated workflow → not designed for 3rd-party access provisioning.

Business need: A scalable, controlled, and auditable process for Qualtrics dashboard access (CX + EX platforms) across 18+ HR products (Engagement, EX journey, Hiring, Exit, Learning, Wellbeing, etc.).

Slide 2 – Proposed Solution Options
Option 1 – Fully Manual

Use Request Portal form (dashboard dropdown + role selection).

Request → Line Manager → Project Owner → Provisioning team.

Provisioning and file extract both manual.

File to IAM daily (8 hrs/day manual OR 2–3 hrs/day with API extract).

Option 2 – Hybrid (Partial Automation)

Request Portal workflow as above.

Provisioning manual, but file extraction automated (via Qualtrics API).

IAM receives formatted file automatically.

Requires Qualtrics feasibility check + build (moderate cost/timeline).

Option 3 – Fully Automated

Request Portal → Approval → API updates directly provision role in Qualtrics (CX + EX).

Revocation handled via integration with JML (Joiner/Mover/Leaver).

No daily files, no manual provisioning.

Requires Qualtrics + Engineering custom integration (high cost, longer timeline).

Slide 3 – Pros & Cons
Approach	Pros	Cons
Manual	No external dependency, simple to start.	Heavy FTE load (8 hrs/day), error-prone, not scalable, delays.
Hybrid	Reduces daily workload, uses Qualtrics APIs, balanced cost.	Still manual provisioning, dependency on Qualtrics API maturity (EX only at project level, not global).
Fully Automated	Scalable, no manual files, future-proof.	Requires custom build, high cost & time, dependency on Qualtrics engineering.

Slide 4 – Recommendation
Short-term (6–12 months): Implement Hybrid model.

Request Portal + Automated user extraction via Qualtrics API.

Reduces manual work (2–3 hrs/day vs 8 hrs/day).

Feasible with moderate cost & timeline.

Long-term (12–24 months): Explore Full Automation.

Direct integration with JML for provisioning + revocation.

Requires Qualtrics custom build + engineering support.

Slide 5 – Risks & Next Steps
Risks:

Qualtrics EX API only supports role assignment at project level → multiple extracts needed.

Reporting of role access requires custom build (no native API).

Cost and timeline dependent on Qualtrics engineering.

Next Steps:

Engage Qualtrics to confirm feasibility of API-based extract (CX = fully automated, EX = per project).

Clarify cost & delivery timeline for hybrid vs full automation.

Create risk acceptance (RAC) if interim manual option needed.

Decide preferred approach (Hybrid vs Full automation) aligned with CDO/Tech leadership.

----------------------------------
Slide 1 – Problem Statement
Following the pivot program, the Qualtrics dashboard access provisioning process shifted from Salesforce to ServiceNow. This transition has created significant challenges for the HR Colleague Listening Team in managing dashboard access effectively.

Currently:

There is no dedicated queue in ServiceNow for dashboard access requests; instead, the same queue is shared with Reporting, making it difficult to track and prioritize.

Dashboard names are unclear, and because requests rely on free-text input, multiple clarifications are often required.

Manual approval is required from business owners, and subsequently the dashboard has to be provisioned manually.

There is no JML (Joiner/Mover/Leaver) integration in this process; leavers must be manually excluded, and movers rely on HRBPs or managers to flag changes.

This process creates delays and increases dependency on multiple clarifications.

Scalability is a major issue: within the Colleague Listening team itself, multiple people handle different dashboards/projects, making consistency and governance difficult.

Conclusion: The current setup is not scalable and lacks efficiency, requiring a robust and auditable solution that can handle dashboard access at scale across 18+ HR products (Engagement, EX journey, Hiring, Exit, Learning, Wellbeing, etc.).

Slide 2 – Common Foundation Across All Approaches
Regardless of which option we pursue, the following elements remain consistent:

Access requests will be initiated via the Request Portal.

Dashboard names will be provided in a dropdown list (instead of free text) to ensure consistency.

Roles will be selectable at the user level, reducing ambiguity.

Line Manager details will be captured automatically, removing manual dependency.

Approvals from business owners can be automated within the workflow.

From this baseline portal workflow, three possible approaches emerge:

Fully Manual (Option 1)

Hybrid / Partial Automation (Option 2)

Fully Automated (Option 3)

Slide 3 – Option 1: Fully Manual
In this model:

Access requests are submitted via the Request Portal.

Business owner approvals are captured automatically.

Provisioning is manual, requiring the team to prepare a OneCert file to upload into Qualtrics.

If the OneCert file automation is not feasible, user details must also be manually extracted and maintained.

Implications:

High time consumption (8 hrs/day FTE effort).

Frequent clarifications, high error risk.

To continue with this model, we would need to raise an ORAC (Operational Risk Acceptance) to formally acknowledge the risk.

This risk is acceptable because:

Qualtrics dashboard access is handled through SSO.

No highly sensitive data (e.g., health records) is exposed in dashboards.

For leavers, their SSO will automatically revoke access; for movers, they may temporarily retain some data visibility, but this is not considered a critical risk.

Pros:

Simple, no external build required.

Can continue immediately.

Cons:

Very resource intensive.

Not scalable.

Long delays in provisioning.

Heavy reliance on manual accuracy.

Slide 4 – Option 2: Hybrid / Partial Automation
In this model:

Requests and approvals remain within the Request Portal.

Provisioning is manual (OneCert file may still be used).

File extraction is automated using Qualtrics APIs to feed IAM.

CX vs EX differences:

CX: Qualtrics has confirmed that full automation is possible for touchpoints in CX; user feeds can be automated directly.

EX: Automation is possible but only at the project level. A project ID must be provided, and user roles can be managed through automated role assignment. However, there is no global-level extract; multiple projects must be managed separately.

Reporting challenge: Qualtrics has stated that no API endpoints exist to return dashboard roles. Only participant metadata can be exported, which may indicate dashboard access indirectly. To achieve true reporting, a custom build from Qualtrics Engineering would be required.

Pros:

Significantly reduces FTE workload (manual time drops to ~2–3 hrs/day).

Leverages Qualtrics API capabilities where available.

Balanced cost vs benefit; can be delivered faster than full automation.

Cons:

Still requires manual provisioning (not fully automated).

Complexity in EX due to project-level scope.

Custom build needed for reporting.

Slide 5 – Option 3: Fully Automated
In this model:

Requests and approvals flow through the Request Portal.

Provisioning is fully automated via Qualtrics APIs, with no OneCert file required.

Integration with JML handles leaver/mover updates automatically.

The system directly applies roles in Qualtrics using automated role assignment.

Feasibility:

CX: Fully automated provisioning is feasible using Qualtrics’ architecture and API set.

EX: Requires project-specific automation (not global). Automated role assignment works, but we must provide project IDs for each survey/dashboard.

Reporting: No in-built reporting for role access exists. Requires custom engineering build.

Pros:

No manual files, no manual provisioning.

Scalable and future-proof.

Integrates with JML lifecycle.

Cons:

High dependency on Qualtrics custom build for EX + reporting.

Higher cost and longer timeline.

Requires close collaboration with Tech/Data and Qualtrics Engineering.

Summary & Next Steps
Manual: Quick, low cost, but unscalable and risk-heavy. Requires ORAC.

Hybrid: Most balanced; uses automation where available, reduces workload significantly, but still has limitations (EX project-level, reporting requires custom build).

Fully Automated: Ideal long-term; no manual steps, but higher cost, timeline, and dependency on custom builds.

Next Steps:

Validate with Qualtrics the exact API capabilities for EX (global vs project scope).

Confirm feasibility and cost of custom reporting build.

Engage Tech/Data to estimate cost, timeline, and integration effort for Hybrid vs Full automation.

Raise ORAC if manual model needs to continue in the interim.

Leadership decision: short-term hybrid vs long-term full automation.


-----------------------------
Approach Aligned with Organizational Policy
As per organizational policy and standards, all request management needs to be handled within the Request system, not ServiceNow.

The Request team has confirmed feasibility and supports this direction:

A form can be created with dashboard names as a dropdown for requesters to select.

Approval workflows can be mapped to the designated approvers for each dashboard.

Line manager approvals can be automated within the workflow.

This ensures a structured, auditable, and policy-compliant process for managing dashboard access requests.
-----------------------------------


Here’s how I’d structure the two tables.

Table 1: Our Understanding (Internal View)
Area	Question	CX Feasibility (Our View)	EX Feasibility (Our View)	In-Built Solution	Custom Solution Needed	Cost Impact (Y/N/Unknown)	Timeline (Est. by Us)	Notes
User Extraction	Can we extract user lists at role level (Admin, Dashboard User, etc.)?	Not clear – seems limited to project-level	Same – tied to project ID, not global	Limited (project-based)	Likely yes, for global view	Unknown	Unknown	Concern: doc shows project-level only
Automation of Extract	Can extraction be automated (e.g., scheduled export/API)?	Possibly via API	Possibly via API	Partial	Likely	Unknown	Needs Qualtrics validation	Unsure if CX & EX endpoints identical
Integration for Provisioning	Can we provision user access to dashboards (CX & EX) automatically via HR Tech tool?	Unsure – may need integration hooks	Unsure – same as CX	Not available	Likely	Yes	3–6 months	Depends on HR Tech integration support
Integration for Revocation	Can we revoke user access automatically (CX & EX)?	Unsure	Unsure	Not available	Likely	Yes	3–6 months	Revocation process is manual now
Hybrid vs Full Automation	Is hybrid approach (part manual, part automated) more feasible at current endpoints?	Likely	Likely	Partially	Yes	Yes	Shorter	Hybrid seems more realistic than full automation right now
Custom Engineering Needs	For role-level extraction + provisioning + revocation, where exactly do we need custom APIs/engineering?	TBD	TBD	No clear OOTB solution	Yes, likely	Yes	Unknown	Needs Qualtrics clarity
Cost Involvement	Do these require additional Qualtrics licensing, engineering services, or partner engagement?	Unknown	Unknown	Maybe not for small extracts	Yes for automation	Yes	Variable	Must confirm explicitly
Timelines	What is realistic timeline for building/implementing automation (CX & EX)?	Unknown	Unknown	–	Yes	Yes	TBD	Ask Qualtrics directly

Table 2: For Qualtrics to Fill (Official View)
Area	Question	CX Feasibility (Qualtrics View)	EX Feasibility (Qualtrics View)	In-Built Solution	Custom Solution Needed	Cost Impact (Y/N/Details)	Timeline (Qualtrics Est.)	Notes / Recommendations
User Extraction	Can we extract user lists at role level (Admin, Dashboard User, etc.)?							
Automation of Extract	Can extraction be automated (e.g., scheduled export/API)?							
Integration for Provisioning	Can we provision user access to dashboards (CX & EX) automatically via HR Tech tool?							
Integration for Revocation	Can we revoke user access automatically (CX & EX)?							
Hybrid vs Full Automation	Is hybrid approach (part manual, part automated) more feasible at current endpoints?							
Custom Engineering Needs	For role-level extraction + provisioning + revocation, where exactly do we need custom APIs/engineering?							
Cost Involvement	Do these require additional Qualtrics licensing, engineering services, or partner engagement?							
Timelines	What is realistic timeline for building/implementing automation (CX & EX)?							

👉 With this, you can send one file with two tabs:

Tab 1 (Our Understanding) → shows what we believe.

Tab 2 (Qualtrics to Fill) → they validate, confirm feasibility, clarify where custom vs inbuilt, and add costs/timelines.

Would you like me to prepare this as a ready-to-use Excel file (with two sheets and prefilled "Our Understanding") so you can directly send it to Qualtrics?








Ask ChatGPT
You said:
I need to give you another response from the Qualtrics team because you are not clear with the CEX. This is what the response we received for CEX, and based on this, you revisit the table what you have shared. The dashboard and user access management side of things for the touchpoints being run in CEX is able to be fully automated using the solutions outlined in the architecture I sent previously. Regarding the EX dashboard access management, I'm still getting an overview of the endpoints because this is the earlier response, but the one I shared before was the recent response. So in this particular response, they have clearly mentioned that the touchpoints are available and they can do the full automation. And regarding the reporting requirement, this will require a custom build from our engineering. I'm starting the process to begin the scope, the requirements, and we'll let you know. But here they didn't specify is it a CEX or EX, what is the reporting requirements, how they can do it. And we are unsure about this one, even in this response. This may need a complete custom build as we do not have any public facing API endpoints that would allow for that level of reporting. And yeah, this is what you need to understand and check the checklist.


ChatGPT said:
Got it 👍 Thanks for clarifying with the additional response from Qualtrics. I now see the distinction:

CEX (Customer Experience / CX) → They confirmed that dashboard + user access management for touchpoints can be fully automated with the endpoints already available.

EX (Employee Experience) → Still under review; endpoints are not fully mapped yet.

Reporting requirements → Qualtrics has not clarified whether it applies to CEX or EX. They only mentioned that it will likely require a custom build since no public API endpoints exist.

Based on this, your checklist/table needs to capture:

Feasibility (Inbuilt vs Custom vs Hybrid) per area (CX vs EX).

Cost Implication (inbuilt = no cost, custom = cost involved).

Automation Scope (full / partial / not possible).

Integration for Provisioning & Revocation (CX vs EX).

Reporting Requirements – clarification needed on whether it is CX or EX, and what exact reporting scope is required.

Here’s a revised dual-table checklist (one for your internal understanding, one for Qualtrics team’s response).

Table 1 – Our Understanding (Internal Draft Checklist)
Area	Platform (CX/EX)	Requirement	Feasibility (Inbuilt / Custom / Hybrid)	Automation Scope	Provisioning & Revocation	Reporting Feasibility	Cost Impact	Timeline (Est.)
User Extract at Role Level	CX	Extract full user list at role-level	Inbuilt (API endpoints exist)	Fully Automated	Supported via API	Not Applicable	No Additional Cost	Short-term
User Extract at Role Level	EX	Extract full user list at role-level	TBD (endpoints review ongoing)	Unknown	TBD	Not Applicable	Unknown	TBD
Dashboard Access – Provisioning	CX	Auto-provision roles to dashboards	Inbuilt	Fully Automated	Yes	Not Applicable	No Additional Cost	Short-term
Dashboard Access – Provisioning	EX	Auto-provision roles to dashboards	TBD (endpoints under review)	Unknown	TBD	Not Applicable	Unknown	TBD
Dashboard Access – Revocation	CX	Auto-revoke roles to dashboards	Inbuilt	Fully Automated	Yes	Not Applicable	No Additional Cost	Short-term
Dashboard Access – Revocation	EX	Auto-revoke roles to dashboards	TBD (endpoints under review)	Unknown	TBD	Not Applicable	Unknown	TBD
Reporting (User/Dashboard level)	CX or EX (Unclear)	Extract reporting data at role/dashboard level	No inbuilt API	Likely Custom Build	Possible via engineering build	Yes	Cost Involved (Custom)	Long-term

Table 2 – For Qualtrics to Validate / Respond
Area	Platform (CX/EX)	Requirement	Is it Feasible? (Yes/No)	If Yes → Inbuilt / Custom / Hybrid	Automation Scope (Full/Partial)	Provisioning & Revocation Support	Reporting Requirement Clarification	Cost Impact	Timeline (Est.)
User Extract at Role Level	CX	Extract full user list at role-level							
User Extract at Role Level	EX	Extract full user list at role-level							
Dashboard Access – Provisioning	CX	Auto-provision roles to dashboards							
Dashboard Access – Provisioning	EX	Auto-provision roles to dashboards							
Dashboard Access – Revocation	CX	Auto-revoke roles to dashboards							
Dashboard Access – Revocation	EX	Auto-revoke roles to dashboards							
Reporting (User/Dashboard level)	CX or EX (?)	Extract reporting data at role/dashboard level					Please clarify: Is reporting required for CX or EX? What level of detail?		

👉 This way:

Table 1 captures your team’s current understanding (so you can validate later).

Table 2 is a checklist for Qualtrics to confirm feasibility, approach (inbuilt/custom), costs, and timeline.

Would you like me to expand Table 2 into a formal “questionnaire-style checklist” (like numbered questions under each area) so you can send it directly to Qualtrics in the RFI format? That way, they can answer in detail rather than only filling the table.








