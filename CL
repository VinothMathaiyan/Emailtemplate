# Initialize TfidfVectorizer (Remove stopwords, lowercase, and process text)
vectorizer = TfidfVectorizer(stop_words=custom_stopwords)

# Fit TF-IDF on Stages (topics)
stages_tfidf = vectorizer.fit_transform(df_stages.iloc[:, 0])  # Assuming topics are in the first column

# Function to find best matching topic
def map_topics(response):
    response_tfidf = vectorizer.transform([response])
    similarities = cosine_similarity(response_tfidf, stages_tfidf)
    best_matches = np.where(similarities[0] > 0.1)[0]  # Threshold = 0.1 (Adjustable)
    
    if len(best_matches) == 0:
        return "No Match"
    return "; ".join(df_stages.iloc[best_matches, 0].values)  # Map multiple topics

# Apply topic mapping to responses
df_1234["Stages"] = df_1234["Expanded Response"].apply(map_topics)
df_5678["Stages"] = df_5678["Expanded Response"].apply(map_topics)
