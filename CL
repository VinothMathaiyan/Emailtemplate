import pandas as pd
from openpyxl import load_workbook

# Function to categorize sentiment
def categorize_sentiment(score):
    if score <= -0.5:
        return "Negative"
    elif -0.5 < score <= 0.5:
        return "Neutral"
    else:
        return "Positive"

# Function to generate topic sentiment summary for a dataframe
def generate_summary(df, sheet_name):
    summary_data = []
    
    for stage, group in df.groupby("Stages"):
        # Count sentiment categories
        positive_count = sum(group["Sentiment Score"].apply(categorize_sentiment) == "Positive")
        negative_count = sum(group["Sentiment Score"].apply(categorize_sentiment) == "Negative")
        neutral_count = sum(group["Sentiment Score"].apply(categorize_sentiment) == "Neutral")

        # Aggregate all comments for the topic
        aggregated_comments = " | ".join(group["Response"].dropna().astype(str))

        # Append to summary data
        summary_data.append({
            "Stages": stage,
            "Positive Count": positive_count,
            "Negative Count": negative_count,
            "Neutral Count": neutral_count,
            "Aggregated Comments": aggregated_comments
        })

    # Convert to DataFrame
    return pd.DataFrame(summary_data)

# Load processed Excel file
file_path = input("Enter the processed Excel file path: ")
df_p1266 = pd.read_excel(file_path, sheet_name="PeopleLeader_1266")
df_c1033 = pd.read_excel(file_path, sheet_name="Colleage_1033")

# Generate summaries
df_summary_p1266 = generate_summary(df_p1266, "PL1266_Topic_Summary")
df_summary_c1033 = generate_summary(df_c1033, "C1033_Topic_Summary")

# Save to the same processed file as new sheets
with pd.ExcelWriter(file_path, engine="openpyxl", mode="a") as writer:
    df_summary_p1266.to_excel(writer, sheet_name="PL1266_Topic_Summary", index=False)
    df_summary_c1033.to_excel(writer, sheet_name="C1033_Topic_Summary", index=False)

print("Summary saved in 'PL1266_Topic_Summary' and 'C1033_Topic_Summary' sheets.")
