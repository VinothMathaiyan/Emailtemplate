import os
import json

def load_qsf_file(qsf_path):
    """
    Loads the JSON data from the specified QSF file.

    Args:
        qsf_path: Path to the QSF file.

    Returns:
        A dictionary containing the JSON data from the QSF file.
    """
    try:
        with open(qsf_path, 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        print(f"Error: QSF file '{qsf_path}' not found.")
        return None
    except json.JSONDecodeError:
        print(f"Error: Invalid JSON in QSF file '{qsf_path}'.")
        return None

def extract_question_ids_from_bl(qsf_data):
    """
    Extracts QuestionIDs from Block Questions (BL) in the QSF data.

    Args:
        qsf_data: A dictionary containing the JSON data from the QSF file.

    Returns:
        A list of QuestionIDs extracted from Block Questions.
    """
    question_ids = []
    for element in qsf_data.get("SurveyElements", []):
        if element.get("Element") == "BL":  # Changed "BQ" to "BL"
            payload = element.get("Payload", {})
            print("Payload:", payload)  # Print the entire payload for debugging

            for block_id, block_data in payload.items():
                if isinstance(block_data, dict) and "BlockElements" in block_data:
                    for block_element in block_data["BlockElements"]:
                        if "QuestionID" in block_element:
                            question_ids.append(block_element["QuestionID"])
    return question_ids

# Change directory
os.chdir(r'c:\User\file')

# Get user input
name = input("enter name: ")
file_name = f"{name}.qsf"
qsf_path = f"QSF/{file_name}"

# Load QSF data
qsf_data = load_qsf_file(qsf_path)

# Extract QuestionIDs from BL
if qsf_data:
    question_ids = extract_question_ids_from_bl(qsf_data)  # Changed "BQ" to "BL"
    print(f"Question IDs from BL in {file_name}: {question_ids}")
